<#@ template debug="false" hostspecific="True" language="C#" #>
<#@ include file="Manager.ttinclude" #>
<#@ include file="config.ttinclude" #>
<# var manager = Manager.Create(Host, GenerationEnvironment); #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Data" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#
	SqlConnection conn = new SqlConnection(myConnectionString);
	conn.Open();
	System.Data.DataTable schema = conn.GetSchema("TABLES");
	string selectQuery = "select * from @tableName";
	SqlCommand command = new SqlCommand(selectQuery,conn);
	SqlDataAdapter ad = new SqlDataAdapter(command);
	System.Data.DataSet ds = new DataSet();        
	foreach(System.Data.DataRow row in schema.Rows)
	{ 
	ds.Tables.Clear();
	command.CommandText = selectQuery.Replace("@tableName",row["TABLE_NAME"].ToString());
	ad.FillSchema(ds, SchemaType.Mapped, row["TABLE_NAME"].ToString());
	manager.StartNewFile(row["TABLE_NAME"].ToString().Trim()+".cs");
	#>using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace <#= myNameSpace#>.Model
{
    /// <summary>
    /// <#= row["TABLE_NAME"].ToString().Trim()#>: 数据实体类
    /// </summary>
	[Serializable]
	public class <#= row["TABLE_NAME"].ToString().Trim()#>
	{	<#  ds.Tables.Clear();
	command.CommandText = selectQuery.Replace("@tableName",row["TABLE_NAME"].ToString());
	ad.FillSchema(ds, SchemaType.Mapped, row["TABLE_NAME"].ToString());
	foreach (DataColumn dc in ds.Tables[0].Columns){ #>

        /// <summary>
        /// <#= dc.ColumnName #>: 
        /// </summary>
        public <#= dc.DataType.Name #> <#= dc.ColumnName #> { get; set; }
	<# }  #>
	
	}
}
<#
manager.EndBlock(); 
}
manager.Process(true); #>
